{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat-app\\\\src\\\\components\\\\button\\\\Button.component.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport ButtonContainer from \"./Button-container.component\";\nimport { TiChevronRightOutline } from \"../../assets/icons/icons\";\nimport * as style from \"./Button.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  icon,\n  iconClass,\n  isIconShown,\n  isLoading,\n  spinner,\n  text,\n  textClass,\n  wrapperClass\n}) => {\n  const {\n    count,\n    decrement,\n    increment\n  } = ButtonContainer();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => increment(),\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${wrapperClass} ${style.container}`,\n      children: [isIconShown && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${iconClass} ${style.icon}`,\n        children: !isLoading ? icon : \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${textClass}`,\n        children: !isLoading && text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Button;\nButton.defaultProps = {\n  icon: /*#__PURE__*/_jsxDEV(TiChevronRightOutline, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this),\n  iconClass: \"\",\n  isIconShown: true,\n  isLoading: false,\n  text: \"Save\",\n  textClass: \"\",\n  wrapperClass: \"\"\n};\nButton.propTypes = {\n  icon: propTypes.element,\n  iconClass: propTypes.string,\n  isIconShown: propTypes.bool,\n  isLoading: propTypes.bool,\n  text: propTypes.string,\n  textClass: propTypes.string,\n  wrapperClass: propTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["E:/chat-app/src/components/button/Button.component.js"],"names":["React","propTypes","ButtonContainer","TiChevronRightOutline","style","Button","icon","iconClass","isIconShown","isLoading","spinner","text","textClass","wrapperClass","count","decrement","increment","container","defaultProps","element","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;;;AAEA,OAAO,MAAMC,MAAM,GAAG,CACpB;AACEC,EAAAA,IADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,WAHF;AAIEC,EAAAA,SAJF;AAKEC,EAAAA,OALF;AAMEC,EAAAA,IANF;AAOEC,EAAAA,SAPF;AAQEC,EAAAA;AARF,CADoB,KAUd;AAEN,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,SAAP;AAAiBC,IAAAA;AAAjB,MAA8Bd,eAAe,EAAnD;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,OAAO,EAAE,MAAMc,SAAS,EAA7B;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAG,GAAED,YAAa,IAAGT,KAAK,CAACa,SAAU,EAAnD;AAAA,iBACGT,WAAW,iBACZ;AAAM,QAAA,SAAS,EAAG,GAAED,SAAU,IAAGH,KAAK,CAACE,IAAK,EAA5C;AAAA,kBACC,CAACG,SAAD,GAAaH,IAAb,GAAoB;AADrB;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAM,QAAA,SAAS,EAAG,GAAEM,SAAU,EAA9B;AAAA,kBACC,CAACH,SAAD,IAAcE;AADf;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAkBD,CAhCM;KAAMN,M;AAkCbA,MAAM,CAACa,YAAP,GAAsB;AACpBZ,EAAAA,IAAI,eAAE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,UADc;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,WAAW,EAAE,IAHO;AAIpBC,EAAAA,SAAS,EAAE,KAJS;AAKpBE,EAAAA,IAAI,EAAE,MALc;AAMpBC,EAAAA,SAAS,EAAE,EANS;AAOpBC,EAAAA,YAAY,EAAE;AAPM,CAAtB;AAUAR,MAAM,CAACJ,SAAP,GAAmB;AACjBK,EAAAA,IAAI,EAAEL,SAAS,CAACkB,OADC;AAEjBZ,EAAAA,SAAS,EAAEN,SAAS,CAACmB,MAFJ;AAGjBZ,EAAAA,WAAW,EAAEP,SAAS,CAACoB,IAHN;AAIjBZ,EAAAA,SAAS,EAAER,SAAS,CAACoB,IAJJ;AAKjBV,EAAAA,IAAI,EAAEV,SAAS,CAACmB,MALC;AAMjBR,EAAAA,SAAS,EAAEX,SAAS,CAACmB,MANJ;AAOjBP,EAAAA,YAAY,EAAEZ,SAAS,CAACmB;AAPP,CAAnB","sourcesContent":["import React from \"react\"\r\n\r\nimport propTypes from \"prop-types\"\r\n\r\nimport ButtonContainer from \"./Button-container.component\";\r\n\r\nimport {TiChevronRightOutline} from \"../../assets/icons/icons\"\r\nimport * as style from \"./Button.module.scss\"\r\n\r\nexport const Button = (\r\n  {\r\n    icon,\r\n    iconClass,\r\n    isIconShown,\r\n    isLoading,\r\n    spinner,\r\n    text,\r\n    textClass,\r\n    wrapperClass,\r\n  }) => {\r\n\r\n  const {count,decrement,increment} = ButtonContainer()\r\n\r\n  return (\r\n    <>\r\n      <div onClick={() => increment()}>\r\n        {count}\r\n      </div>\r\n      <div className={`${wrapperClass} ${style.container}`}>\r\n        {isIconShown &&\r\n        <span className={`${iconClass} ${style.icon}`}>\r\n        {!isLoading ? icon : \"spinner\"}\r\n      </span>\r\n        }\r\n        <span className={`${textClass}`}>\r\n        {!isLoading && text}\r\n      </span>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  icon: <TiChevronRightOutline/>,\r\n  iconClass: \"\",\r\n  isIconShown: true,\r\n  isLoading: false,\r\n  text: \"Save\",\r\n  textClass: \"\",\r\n  wrapperClass: \"\",\r\n}\r\n\r\nButton.propTypes = {\r\n  icon: propTypes.element,\r\n  iconClass: propTypes.string,\r\n  isIconShown: propTypes.bool,\r\n  isLoading: propTypes.bool,\r\n  text: propTypes.string,\r\n  textClass: propTypes.string,\r\n  wrapperClass: propTypes.string,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}