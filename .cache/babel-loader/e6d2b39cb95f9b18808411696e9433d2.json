{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat-app\\\\src\\\\components\\\\button\\\\Button.component.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport { increment } from \"./Button-container.component\";\nimport { TiChevronRightOutline } from \"../../assets/icons/icons\";\nimport * as style from \"./Button.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  icon,\n  iconClass,\n  isIconShown,\n  isLoading,\n  count,\n  onIncrement,\n  spinner,\n  text,\n  textClass,\n  wrapperClass\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${wrapperClass} ${style.container}`,\n    children: [isIconShown && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${iconClass} ${style.icon}`,\n      children: !isLoading ? icon : \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${textClass}`,\n      children: !isLoading && text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => increment(),\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nButton.defaultProps = {\n  icon: /*#__PURE__*/_jsxDEV(TiChevronRightOutline, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this),\n  iconClass: \"\",\n  isIconShown: true,\n  isLoading: false,\n  text: \"Save\",\n  textClass: \"\",\n  wrapperClass: \"\"\n};\nButton.propTypes = {\n  icon: propTypes.element,\n  iconClass: propTypes.string,\n  isIconShown: propTypes.bool,\n  isLoading: propTypes.bool,\n  text: propTypes.string,\n  textClass: propTypes.string,\n  wrapperClass: propTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["E:/chat-app/src/components/button/Button.component.js"],"names":["React","propTypes","increment","TiChevronRightOutline","style","Button","icon","iconClass","isIconShown","isLoading","count","onIncrement","spinner","text","textClass","wrapperClass","container","defaultProps","element","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,SAAR,QAAwB,8BAAxB;AAEA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;;AAEA,OAAO,MAAMC,MAAM,GAAG,CACpB;AACEC,EAAAA,IADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,WAHF;AAIEC,EAAAA,SAJF;AAKEC,EAAAA,KALF;AAMEC,EAAAA,WANF;AAOEC,EAAAA,OAPF;AAQEC,EAAAA,IARF;AASEC,EAAAA,SATF;AAUEC,EAAAA;AAVF,CADoB,KAYd;AAGN,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEA,YAAa,IAAGX,KAAK,CAACY,SAAU,EAAnD;AAAA,eACGR,WAAW,iBACZ;AAAM,MAAA,SAAS,EAAG,GAAED,SAAU,IAAGH,KAAK,CAACE,IAAK,EAA5C;AAAA,gBACG,CAACG,SAAD,GAAaH,IAAb,GAAoB;AADvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAM,MAAA,SAAS,EAAG,GAAEQ,SAAU,EAA9B;AAAA,gBACG,CAACL,SAAD,IAAcI;AADjB;AAAA;AAAA;AAAA;AAAA,YANF,eASE;AAAK,MAAA,OAAO,EAAE,MAAMX,SAAS,EAA7B;AAAA,gBACGQ;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BM;KAAML,M;AAgCbA,MAAM,CAACY,YAAP,GAAsB;AACpBX,EAAAA,IAAI,eAAE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,UADc;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,WAAW,EAAE,IAHO;AAIpBC,EAAAA,SAAS,EAAE,KAJS;AAKpBI,EAAAA,IAAI,EAAE,MALc;AAMpBC,EAAAA,SAAS,EAAE,EANS;AAOpBC,EAAAA,YAAY,EAAE;AAPM,CAAtB;AAUAV,MAAM,CAACJ,SAAP,GAAmB;AACjBK,EAAAA,IAAI,EAAEL,SAAS,CAACiB,OADC;AAEjBX,EAAAA,SAAS,EAAEN,SAAS,CAACkB,MAFJ;AAGjBX,EAAAA,WAAW,EAAEP,SAAS,CAACmB,IAHN;AAIjBX,EAAAA,SAAS,EAAER,SAAS,CAACmB,IAJJ;AAKjBP,EAAAA,IAAI,EAAEZ,SAAS,CAACkB,MALC;AAMjBL,EAAAA,SAAS,EAAEb,SAAS,CAACkB,MANJ;AAOjBJ,EAAAA,YAAY,EAAEd,SAAS,CAACkB;AAPP,CAAnB","sourcesContent":["import React from \"react\"\r\n\r\nimport propTypes from \"prop-types\"\r\n\r\nimport {increment} from \"./Button-container.component\"\r\n\r\nimport {TiChevronRightOutline} from \"../../assets/icons/icons\"\r\nimport * as style from \"./Button.module.scss\"\r\n\r\nexport const Button = (\r\n  {\r\n    icon,\r\n    iconClass,\r\n    isIconShown,\r\n    isLoading,\r\n    count,\r\n    onIncrement,\r\n    spinner,\r\n    text,\r\n    textClass,\r\n    wrapperClass,\r\n  }) => {\r\n\r\n\r\n  return (\r\n    <div className={`${wrapperClass} ${style.container}`}>\r\n      {isIconShown &&\r\n      <span className={`${iconClass} ${style.icon}`}>\r\n        {!isLoading ? icon : \"spinner\"}\r\n      </span>\r\n      }\r\n      <span className={`${textClass}`}>\r\n        {!isLoading && text}\r\n      </span>\r\n      <div onClick={() => increment()}>\r\n        {count}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  icon: <TiChevronRightOutline/>,\r\n  iconClass: \"\",\r\n  isIconShown: true,\r\n  isLoading: false,\r\n  text: \"Save\",\r\n  textClass: \"\",\r\n  wrapperClass: \"\",\r\n}\r\n\r\nButton.propTypes = {\r\n  icon: propTypes.element,\r\n  iconClass: propTypes.string,\r\n  isIconShown: propTypes.bool,\r\n  isLoading: propTypes.bool,\r\n  text: propTypes.string,\r\n  textClass: propTypes.string,\r\n  wrapperClass: propTypes.string,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}