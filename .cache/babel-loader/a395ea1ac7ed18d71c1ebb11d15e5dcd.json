{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat-app\\\\src\\\\components\\\\button\\\\Button.component.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport ButtonContainer from \"./Button-container.component\";\nimport { TiChevronRightOutline } from \"../../assets/icons/icons\";\nimport * as style from \"./Button.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  icon,\n  iconClass,\n  isIconShown,\n  isLoading,\n  spinner,\n  text,\n  textClass,\n  wrapperClass,\n  ...props\n}) => {\n  // const {count, decrement, increment, reset} = ButtonContainer\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        userSelect: \"none\",\n        cursor: \"pointer\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: props.increment,\n        children: \" +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: props.decrement,\n        children: \" -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: props.reset,\n        children: \" Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${wrapperClass} ${style.container}`,\n      children: [isIconShown && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${iconClass} ${style.icon}`,\n        children: !isLoading ? icon : \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${textClass}`,\n        children: !isLoading && text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Button;\nButton.defaultProps = {\n  icon: /*#__PURE__*/_jsxDEV(TiChevronRightOutline, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this),\n  iconClass: \"\",\n  isIconShown: true,\n  isLoading: false,\n  text: \"Save\",\n  textClass: \"\",\n  wrapperClass: \"\"\n};\nButton.propTypes = {\n  icon: propTypes.element,\n  iconClass: propTypes.string,\n  isIconShown: propTypes.bool,\n  isLoading: propTypes.bool,\n  text: propTypes.string,\n  textClass: propTypes.string,\n  wrapperClass: propTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["E:/chat-app/src/components/button/Button.component.js"],"names":["React","propTypes","ButtonContainer","TiChevronRightOutline","style","Button","icon","iconClass","isIconShown","isLoading","spinner","text","textClass","wrapperClass","props","userSelect","cursor","increment","decrement","reset","count","container","defaultProps","element","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;;;AAEA,OAAO,MAAMC,MAAM,GAAG,CACpB;AACEC,EAAAA,IADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,WAHF;AAIEC,EAAAA,SAJF;AAKEC,EAAAA,OALF;AAMEC,EAAAA,IANF;AAOEC,EAAAA,SAPF;AAQEC,EAAAA,YARF;AASE,KAAGC;AATL,CADoB,KAWd;AAEN;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,MAAM,EAAE;AAA7B,OAAZ;AAAA,8BACE;AAAM,QAAA,OAAO,EAAEF,KAAK,CAACG,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,OAAO,EAAEH,KAAK,CAACI,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,OAAO,EAAEJ,KAAK,CAACK,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAML,KAAK,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAG,GAAEP,YAAa,IAAGT,KAAK,CAACiB,SAAU,EAAnD;AAAA,iBACGb,WAAW,iBACZ;AAAM,QAAA,SAAS,EAAG,GAAED,SAAU,IAAGH,KAAK,CAACE,IAAK,EAA5C;AAAA,kBACC,CAACG,SAAD,GAAaH,IAAb,GAAoB;AADrB;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAM,QAAA,SAAS,EAAG,GAAEM,SAAU,EAA9B;AAAA,kBACC,CAACH,SAAD,IAAcE;AADf;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAqBD,CApCM;KAAMN,M;AAsCbA,MAAM,CAACiB,YAAP,GAAsB;AACpBhB,EAAAA,IAAI,eAAE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,UADc;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,WAAW,EAAE,IAHO;AAIpBC,EAAAA,SAAS,EAAE,KAJS;AAKpBE,EAAAA,IAAI,EAAE,MALc;AAMpBC,EAAAA,SAAS,EAAE,EANS;AAOpBC,EAAAA,YAAY,EAAE;AAPM,CAAtB;AAUAR,MAAM,CAACJ,SAAP,GAAmB;AACjBK,EAAAA,IAAI,EAAEL,SAAS,CAACsB,OADC;AAEjBhB,EAAAA,SAAS,EAAEN,SAAS,CAACuB,MAFJ;AAGjBhB,EAAAA,WAAW,EAAEP,SAAS,CAACwB,IAHN;AAIjBhB,EAAAA,SAAS,EAAER,SAAS,CAACwB,IAJJ;AAKjBd,EAAAA,IAAI,EAAEV,SAAS,CAACuB,MALC;AAMjBZ,EAAAA,SAAS,EAAEX,SAAS,CAACuB,MANJ;AAOjBX,EAAAA,YAAY,EAAEZ,SAAS,CAACuB;AAPP,CAAnB","sourcesContent":["import React from \"react\"\r\n\r\nimport propTypes from \"prop-types\"\r\n\r\nimport ButtonContainer from \"./Button-container.component\";\r\n\r\nimport {TiChevronRightOutline} from \"../../assets/icons/icons\"\r\nimport * as style from \"./Button.module.scss\"\r\n\r\nexport const Button = (\r\n  {\r\n    icon,\r\n    iconClass,\r\n    isIconShown,\r\n    isLoading,\r\n    spinner,\r\n    text,\r\n    textClass,\r\n    wrapperClass,\r\n    ...props\r\n  }) => {\r\n\r\n  // const {count, decrement, increment, reset} = ButtonContainer\r\n\r\n  return (\r\n    <>\r\n      <div style={{userSelect: \"none\", cursor: \"pointer\"}}>\r\n        <span onClick={props.increment}> +</span>\r\n        <span onClick={props.decrement}> -</span>\r\n        <span onClick={props.reset}> Reset</span>\r\n        <div>{props.count}</div>\r\n      </div>\r\n      <div className={`${wrapperClass} ${style.container}`}>\r\n        {isIconShown &&\r\n        <span className={`${iconClass} ${style.icon}`}>\r\n        {!isLoading ? icon : \"spinner\"}\r\n      </span>\r\n        }\r\n        <span className={`${textClass}`}>\r\n        {!isLoading && text}\r\n      </span>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  icon: <TiChevronRightOutline/>,\r\n  iconClass: \"\",\r\n  isIconShown: true,\r\n  isLoading: false,\r\n  text: \"Save\",\r\n  textClass: \"\",\r\n  wrapperClass: \"\",\r\n}\r\n\r\nButton.propTypes = {\r\n  icon: propTypes.element,\r\n  iconClass: propTypes.string,\r\n  isIconShown: propTypes.bool,\r\n  isLoading: propTypes.bool,\r\n  text: propTypes.string,\r\n  textClass: propTypes.string,\r\n  wrapperClass: propTypes.string,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}